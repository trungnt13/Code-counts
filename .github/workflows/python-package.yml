name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --ignore=E111 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        coverage run -m unittest discover -s tests -p test*.py
        coverage report -m > cov.txt
        cat cov.txt
    - name: Prepare coverage information
      run: |
        COV=`cat cov.txt`
        PER=`grep -oP '[0-9]{2,3}%' <<<"$COV" | tail -1`
        NUMB=${PER:0:2}
        if (( $(echo "$NUMB <= 50" | bc -l) )) ; then
          COLOR=red
        elif (( $(echo "$NUMB > 80" | bc -l) )); then
          COLOR=green
        else
          COLOR=yellow
        fi
        echo "message=$PER" >> $GITHUB_ENV
        echo "color=$COLOR" >> $GITHUB_ENV
    - name: Create coverage badge
      uses: schneegans/dynamic-badges-action@v1.1.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 97ca78aa87bce5c2a5455433931aeca0
        filename: coconerd.json
        label: Coverage
        message: ${{ env.message }}
        color: ${{ env.color }}